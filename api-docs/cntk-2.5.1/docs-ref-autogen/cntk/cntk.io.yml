### YamlMime:PythonPackage
uid: cntk.io
name: io
fullName: cntk.io
summary: CNTK IO utilities.
type: import
functions:
- uid: cntk.io.Base64ImageDeserializer
  name: Base64ImageDeserializer
  summary: "Configures the image reader that reads base64 encoded images and corresponding\n\
    labels from a file of the form:\n\n<!-- literal_block {\"ids\": [], \"classes\"\
    : [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"xml:space\": \"preserve\"\
    } -->\n\n````\n\n   [sequenceId <tab>] <numerical label (0-based class id)> <tab>\
    \ <base64 encoded image>\n   ````\n\nSimilarly to the ImageDeserializer, the sequenceId\
    \ prefix is optional and can be omitted."
  signature: Base64ImageDeserializer(filename, streams)
  parameters:
  - name: filename
    description: 'file name of the input file dataset that contains images

      and corresponding labels'
    types:
    - <xref:str>
  - name: streams
  seeAlsoContent: '  [Base64ImageDeserializer options](/cognitive-toolkit/BrainScript-and-Python---Understanding-and-Extending-Readers#base64imagedeserializer-options)

    '
- uid: cntk.io.CBFDeserializer
  name: CBFDeserializer
  summary: Configures the CNTK binary-format deserializer.
  signature: CBFDeserializer(filename, streams={})
  parameters:
  - name: filename
    description: file name containing the binary data
    types:
    - <xref:str>
  - name: streams
    description: 'any dictionary-like object that contains a mapping from stream

      names to <xref:cntk.io.StreamDef> objects. Each StreamDef object configures

      an input stream.'
    defaultValue: '{}'
  seeAlsoContent: '  [CNTKBinaryReader format](/cognitive-toolkit/BrainScript-CNTKBinary-Reader)

    '
- uid: cntk.io.CTFDeserializer
  name: CTFDeserializer
  summary: "Configures the CNTK text-format reader that reads text-based files with\n\
    lines of the form:\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\"\
    : [], \"dupnames\": [], \"backrefs\": [], \"xml:space\": \"preserve\"} -->\n\n\
    ````\n\n   [Sequence_Id] (Sample)+\n   ````\n\nwhere:\n\n<!-- literal_block {\"\
    ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [],\
    \ \"xml:space\": \"preserve\"} -->\n\n````\n\n   Sample=|Input_Name (Value )*\n\
    \   ````"
  signature: CTFDeserializer(filename, streams)
  parameters:
  - name: filename
    description: file name containing the text input
    types:
    - <xref:str>
  - name: streams
    description: 'any dictionary-like object that contains a mapping from stream

      names to <xref:cntk.io.StreamDef> objects. Each StreamDef object configures

      an input stream.'
  seeAlsoContent: '  [CNTKTextReader format](/cognitive-toolkit/BrainScript-CNTKTextFormat-Reader)

    '
- uid: cntk.io.HTKFeatureDeserializer
  name: HTKFeatureDeserializer
  summary: Configures the HTK feature reader that reads speech data from scp files.
  signature: HTKFeatureDeserializer(streams)
  parameters:
  - name: streams
    description: 'any dictionary-like object that contains a mapping from stream

      names to <xref:cntk.io.StreamDef> objects. Each StreamDef object configures

      a feature stream.'
- uid: cntk.io.HTKMLFDeserializer
  name: HTKMLFDeserializer
  summary: 'Configures an HTK label reader that reads speech HTK format MLF (Master

    Label File)'
  signature: HTKMLFDeserializer(label_mapping_file, streams, phoneBoundaries=False)
  parameters:
  - name: label_mapping_file
    description: path to the label mapping file
    types:
    - <xref:str>
  - name: streams
    description: 'any dictionary-like object that contains a mapping from stream

      names to <xref:cntk.io.StreamDef> objects. Each StreamDef object configures

      a label stream.'
  - name: phoneBoundaries
    description: if phone boundaries should be considered (should be set to True for
      CTC training, False otherwise)
    defaultValue: 'False'
    types:
    - <xref:bool>, <xref:defaults to False>
- uid: cntk.io.ImageDeserializer
  name: ImageDeserializer
  summary: "Configures the image reader that reads images and corresponding\nlabels\
    \ from a file of the form:\n\n<!-- literal_block {\"ids\": [], \"classes\": [],\
    \ \"names\": [], \"dupnames\": [], \"backrefs\": [], \"xml:space\": \"preserve\"\
    } -->\n\n````\n\n   <full path to image> <tab> <numerical label (0-based class\
    \ id)>\n   ````\n\nor:\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"\
    names\": [], \"dupnames\": [], \"backrefs\": [], \"xml:space\": \"preserve\"}\
    \ -->\n\n````\n\n   sequenceId <tab> path <tab> label\n   ````"
  signature: ImageDeserializer(filename, streams)
  parameters:
  - name: filename
    description: 'file name of the map file that associates images to

      classes'
    types:
    - <xref:str>
  - name: streams
  seeAlsoContent: '  [Image reader definition](/cognitive-toolkit/BrainScript-Image-reader)

    '
- uid: cntk.io.LatticeDeserializer
  name: LatticeDeserializer
  summary: Configures a lattice deserializer
  signature: LatticeDeserializer(lattice_index_file, streams)
  parameters:
  - name: lattice_index_file
    description: path to the file containing list of lattice TOC (table of content)
      files
    types:
    - <xref:str>
  - name: streams
- uid: cntk.io.StreamDef
  name: StreamDef
  summary: "Configuration of a stream for use with the builtin Deserializers.\n  \
    \ The meanings of some configuration keys have a mild dependency on the\n   exact\
    \ deserializer, and certain keys are meaningless for certain\n   deserializers."
  signature: StreamDef(field=None, shape=None, is_sparse=False, transforms=None, context=None,
    scp=None, mlf=None, broadcast=None, defines_mb_size=False, max_sequence_length=65535)
  parameters:
  - name: field
    description: "this is the name of the stream\n\n* for CTFDeserializer the name\
      \ is inside the CTF file \n\n* for ImageDeserializer the acceptable names are\
      \ *image* or *label* \n\n* for HTKFeatureDeserializer and HTKMLFDeserializer\
      \ only the default value of None is acceptable"
    defaultValue: None
    types:
    - <xref:str>, <xref:defaults to None>
  - name: shape
    description: 'dimensions of this

      stream. HTKFeatureDeserializer, HTKMLFDeserializer, and

      CTFDeserializer read data as flat arrays. If you need different

      shapes you can <xref:cntk.ops.reshape> it later.'
    defaultValue: None
    types:
    - <xref:int>
    - <xref:tuple>, <xref:defaults to None>
  - name: is_sparse
    description: 'whether the provided data is

      sparse. *False* by default, unless mlf is provided.'
    defaultValue: 'False'
    types:
    - <xref:bool>, <xref:defaults to False>
  - name: transforms
    description: 'list of transforms to be

      applied by the Deserializer. Currently only ImageDeserializer

      supports transforms.'
    defaultValue: None
    types:
    - <xref:list>, <xref:defaults to None>
  - name: context
    description: 'left and right context to

      consider when reading in HTK data. Only supported by

      HTKFeatureDeserializer.'
    defaultValue: None
    types:
    - <xref:tuple>, <xref:defaults to None>
  - name: scp
    description: scp files for HTK data
    defaultValue: None
    types:
    - <xref:str>
    - <xref:list>, <xref:defaults to None>
  - name: mlf
    description: mlf files for HTK data
    defaultValue: None
    types:
    - <xref:str>
    - <xref:list>, <xref:defaults to None>
  - name: broadcast
    description: 'whether the features in this

      stream should be broadcast to the whole sequence (useful in e.g.

      ivectors with HTK)'
    defaultValue: None
    types:
    - <xref:bool>, <xref:defaults to None>
  - name: defines_mb_size
    description: 'whether this stream defines

      the minibatch size.'
    defaultValue: 'False'
    types:
    - <xref:bool>, <xref:defaults to False>
  - name: max_sequence_length
    description: the upper limit on the length of consumed sequences. Sequence of
      larger size are skipped.
    defaultValue: '65535'
    types:
    - <xref:int>, <xref:defaults to 65535>
- uid: cntk.io.sequence_to_cntk_text_format
  name: sequence_to_cntk_text_format
  summary: 'Converts a list of NumPy arrays representing tensors of inputs into a

    format that is readable by <xref:cntk.io.CTFDeserializer>.'
  signature: sequence_to_cntk_text_format(seq_idx, alias_tensor_map)
  parameters:
  - name: seq_idx
    description: number of current sequence
    types:
    - <xref:int>
  - name: alias_tensor_map
    description: 'maps alias (str) to tensor (ndarray). Tensors

      are assumed to have dynamic axis.'
    types:
    - <xref:dict>
  return:
    description: 'String representation in [CNTKTextReader format](/cognitive-toolkit/BrainScript-CNTKTextFormat-Reader)'
    types:
    - <xref:str>
classes:
- cntk.io.MinibatchData
- cntk.io.MinibatchSource
- cntk.io.MinibatchSourceFromData
- cntk.io.StreamConfiguration
- cntk.io.StreamInformation
- cntk.io.UserDeserializer
- cntk.io.UserMinibatchSource
packages:
- cntk.io.tests
modules:
- cntk.io.transforms
